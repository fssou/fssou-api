name: Deployment Infrastructure

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - "closed"
    branches:
      - main

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_PROJECT_NAME: ${{ secrets.GCP_PROJECT_NAME }}
  GCP_TF_STATE_BUCKET: ${{ secrets.GCP_TF_STATE_BUCKET }}
  GCP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
  GCP_SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - id: gcp-auth
        name: OIDC Google Cloud
        uses: google-github-actions/auth@v1
        with:
          create_credentials_file: true
          workload_identity_provider: ${{ env.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.GCP_SERVICE_ACCOUNT }}
          audience: ${{ env.GCP_WORKLOAD_IDENTITY_PROVIDER }}
      - name: Terraform Set up
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.6.0
      - name: Terraform Configure
        working-directory: infra
        run: > 
          echo 'state_bucket="${{ env.GCP_PROJECT_ID }}"' >> generated.auto.tfvars
          echo 'project_id="${{ env.GCP_TF_STATE_BUCKET }}"' >> generated.auto.tfvars
          echo 'project_name="${{ env.GCP_PROJECT_NAME }}"' >> generated.auto.tfvars
          echo 'gh_repo_id="${{ github.repository_id }}"' >> generated.auto.tfvars
      - name: Terraform Initialize
        run: terraform -chdir=infra init
      - name: Terraform Plan Changes
        run: terraform -chdir=infra plan -out=${{ github.sha }}.tfplan
      - name: Terraform Apply Changes
        run: terraform -chdir=infra apply -auto-approve ${{ github.sha }}.tfplan
